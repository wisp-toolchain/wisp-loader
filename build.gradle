plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
}

group = 'me.alphamode.wisp'
version = '1.0'

allprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'

    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url = "https://libraries.minecraft.net"
        }
        maven {
            url = "https://maven.fabricmc.net/"
        }
        maven {
            url = 'https://plugins.gradle.org/m2/'
        }

        maven {
            url 'https://repo.sleeping.town'
            content {
                includeGroup 'com.unascribed'
            }
        }
    }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    runtimeOnly project(":minecraft")
    runtimeOnly project(":mixin")

//    implementation("me.alphamode:wisptestmod:1.0-SNAPSHOT")
    api("me.alphamode.wisp.env:WispEnv:1.0")

    api 'org.ow2.sat4j:org.ow2.sat4j.core:2.3.6'
    api 'org.ow2.sat4j:org.ow2.sat4j.pb:2.3.6'

    api 'com.unascribed:flexver-java:1.0.2'

    api("com.mojang:logging:1.1.1")

    api("net.fabricmc:tiny-remapper:0.10.1")
    api("net.fabricmc:mapping-io:0.2.1")

    api 'org.tomlj:tomlj:1.1.0'

    api 'org.slf4j:slf4j-api:1.7.25'
    api 'org.jetbrains:annotations:24.1.0'
}

test {
    useJUnitPlatform()
}

java {
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}